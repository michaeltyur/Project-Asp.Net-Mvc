@model Models.Item

@{
    ViewBag.Title = "Edit the Item";
    var id = Model.ItemId;
}


<div class="main-container">
    <div class="page">
        <div class="index-title"><h2>@ViewBag.Title</h2></div>

        <div class="registration-form-container">

            @*<div class="">

                </div>*@
            @using (Html.BeginForm("EditItem", "Home", FormMethod.Post,
                                                    new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(u => u.ItemId)

                <div class="form-horizontal">
                    <h4>Update the Advert</h4>
                    <hr />
                    @*<p>* fields are required</p>*@
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.HiddenFor(model => model.ItemId)
                    @Html.HiddenFor(model => model.TimeCreation)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LongDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LongDescription, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LongDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*Image1*@
                    <div class="form-group">
                        @Html.LabelFor(model => Model.Image1, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <br />
                            @{
                                var imgSrc1 = "";
                                if (Model.Image1 != null)
                                {
                                    var base64 = Convert.ToBase64String(Model.Image1);
                                    imgSrc1 = String.Format("data:image;base64,{0}", base64);
                                }
                                else
                                {
                                    imgSrc1 = "../../Images/No_Image_Available.jpg";
                                }
                            }
                            <img src="@imgSrc1" id="image1" class="mini-image" />
                        </div>
                    </div>
                    <br />
                    <div class="form-group">
                        @Html.LabelFor(model => model.Image1, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.ValidationMessage("file")
                            <input type="file" name="files" id="file1" style="width: 100%;" @*onclick="changeItem1(this)"*@ />
                        </div>
                    </div>

                    @*Image2*@
                    <div class="form-group">
                        @Html.LabelFor(model => Model.Image2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <br />
                            @{
                                var imgSrc2 = "";
                                if (Model.Image2 != null)
                                {
                                    var base64 = Convert.ToBase64String(Model.Image2);
                                    imgSrc2 = String.Format("data:image;base64,{0}", base64);
                                }
                                else
                                {
                                    imgSrc2 = "../../ Images / No_Image_Available.jpg";
                                }
                            }
                            <img src="@imgSrc2" id="image2" class="mini-image" />
                        </div>
                    </div>
                    <br />

                    <div class="form-group">
                        @Html.LabelFor(model => model.Image2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.ValidationMessage("file")
                            <input type="file" name="files" id="file2" style="width: 100%;" />
                        </div>
                    </div>

                    @*Image3*@
                    <div class="form-group">
                        @Html.LabelFor(model => Model.Image3, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <br />
                            @{
                                var imgSrc3 = "";
                                if (Model.Image3 != null)
                                {
                                    var base64 = Convert.ToBase64String(Model.Image3);
                                    imgSrc3 = String.Format("data:image;base64,{0}", base64);
                                }
                                else
                                {
                                    imgSrc3 = "../../ Images / No_Image_Available.jpg";
                                }
                            }
                            <img src="@imgSrc3" id="image3" class="mini-image" />
                        </div>
                    </div>
                    <br />

                    <div class="form-group">
                        @Html.LabelFor(model => model.Image3, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.ValidationMessage("file")
                            <input type="file" name="files" id="file3" style="width: 100%" />
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Update Item" class="btn btn-default" onclick="return confirm('Do you want to update the advert and back to Home page?')" />
                        </div>
                    </div>
                </div>
                                }

            <div>
                <form method="post" action="@Url.Action("Index", "Home")">
                    <input type="submit" class="item-button" value="Back to Home" />
                </form>
            </div>
        </div>
    </div>
</div>


<div class="section-ads">
    @section Ads
    {
        @Html.Action("Ads", "Ads")
    }
</div>

